name: CI & Release

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint:check

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build

  build-macos:
    name: Build macOS App
    needs: test
    runs-on: macos-latest
    timeout-minutes: 60  # Notarization can take time

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and Package macOS App
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "Building signed release for tag: ${GITHUB_REF}"
            npm run package:publish
          else
            echo "Building unsigned version for development"
            npm run package:mac-unsigned
          fi
        env:
          # GitHub token for publishing releases
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Apple Developer credentials for notarization
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          
          # Code signing certificate (base64 encoded .p12 file)
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: macos-dist
          path: |
            release/*.dmg
            release/*.zip
            release/latest-mac.yml
          retention-days: 30
