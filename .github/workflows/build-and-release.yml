name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    # Only run tests for pushes/PRs, not for tag releases
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint:check

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build

  build-macos-ci:
    name: Build macOS (CI)
    runs-on: macos-latest
    timeout-minutes: 30
    needs: test
    # Only run for pushes/PRs, not for tag releases
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build unsigned macOS App
        run: npm run package:mac-unsigned

      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-ci-build
          path: |
            release/*.dmg
            release/*.zip
            release/latest-mac.yml
          retention-days: 30

  release-macos:
    name: Release macOS
    runs-on: macos-latest
    timeout-minutes: 60
    # Only run for tag pushes
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and Sign macOS App for Release
        run: npm run package:publish
        env:
          # GitHub token for publishing releases
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Apple Developer credentials for notarization
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          
          # Code signing certificate (base64 encoded .p12 file)
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: |
            release/*.dmg
            release/*.zip
            release/latest-mac.yml
          retention-days: 90

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.dmg
            release/*.zip
            release/latest-mac.yml
          draft: false
          prerelease: false
          generate_release_notes: true
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 